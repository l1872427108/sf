(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{436:function(t,a,r){"use strict";r.r(a);var s=r(65),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#树"}},[t._v("#")]),t._v(" 树")]),t._v(" "),r("p",[t._v("树是一种非线性的数据结构.")]),t._v(" "),r("p",[t._v("前端工作过程中，常见的树包括：DOM树、级联选择、树形控件。")]),t._v(" "),r("p",[t._v("js 中可以使用 Object 和 Array 来构建树。")]),t._v(" "),r("h3",{attrs:{id:"树的常见操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#树的常见操作"}},[t._v("#")]),t._v(" 树的常见操作")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("树的深度优先遍历")])]),t._v(" "),r("li",[r("p",[t._v("树的广度优先遍历")])])]),t._v(" "),r("h3",{attrs:{id:"二叉树-特殊的树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉树-特殊的树"}},[t._v("#")]),t._v(" 二叉树(特殊的树)")]),t._v(" "),r("p",[t._v("树中的每个节点最多只能有两个子节点。 可以使用 Object 来模拟二叉树.")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("先序遍历")])]),t._v(" "),r("li",[r("p",[t._v("中序遍历")])]),t._v(" "),r("li",[r("p",[t._v("后序遍历")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);